cmd({
    pattern: "tagall",
    react: "üîä",
    alias: ["gc_tagall"],
    desc: "To Tag all Members",
    category: "group",
    use: '.tagall [message]',
    filename: __filename
},
async (conn, mek, m, { from, participants, reply, isGroup, senderNumber, groupAdmins, prefix, command, args, body }) => {
    try {
        if (!isGroup) return reply("‚ùå This command can only be used in groups.");
        
        // Better bot owner check
        const botOwner = config.OWNER_NUMBER + "@s.whatsapp.net"; // Use from config
        const senderJid = senderNumber + "@s.whatsapp.net";

        if (!groupAdmins.includes(senderJid) && senderJid !== botOwner) {
            return reply("‚ùå Only group admins or the bot owner can use this command.");
        }

        // Get fresh group metadata
        const groupInfo = await conn.groupMetadata(from);
        const groupName = groupInfo.subject || "Unknown Group";
        const members = groupInfo.participants || participants;
        
        if (!members || members.length === 0) {
            return reply("‚ùå No members found in this group.");
        }

        const emojis = ['üì¢', 'üîä', 'üåê', 'üî∞', '‚ù§‚Äçü©π', 'ü§ç', 'üñ§', 'ü©µ', 'üìù', 'üíó', 'üîñ', 'ü™©', 'üì¶', 'üéâ', 'üõ°Ô∏è', 'üí∏', '‚è≥', 'üóø', 'üöÄ', 'üéß', 'ü™Ä', '‚ö°', 'üö©', 'üçÅ', 'üó£Ô∏è', 'üëª', '‚ö†Ô∏è', 'üî•'];
        const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];

        // Get message after command
        const message = body.replace(prefix + command, "").trim() || "Attention Everyone";

        let teks = `‚ñ¢ Group : *${groupName}*\n‚ñ¢ Members : *${members.length}*\n‚ñ¢ Message: *${message}*\n\n‚îå‚îÄ‚îÄ‚îÄ‚ä∑ *MENTIONS*\n`;

        // Build mention list
        members.forEach(mem => {
            teks += `${randomEmoji} @${mem.id.split('@')[0]}\n`;
        });

        teks += "‚îî‚îÄ‚îÄ‚ú™ DARKZONE ‚îÉ MD ‚ú™‚îÄ‚îÄ";

        // Send with proper mentions
        await conn.sendMessage(
            from, 
            { 
                text: teks, 
                mentions: members.map(a => a.id) 
            }, 
            { quoted: mek }
        );

    } catch (e) {
        console.error("TagAll Error:", e);
        reply(`‚ùå *Error Occurred!*\n\n${e.message || "Unknown error"}`);
    }
});
